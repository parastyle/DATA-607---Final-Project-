View(all)
View(all)
is.na(all[,4])
dim(all)
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
dim(all)
all <- filter(all, is.na(all[,4])==FALSE)
is.na(all[,4])
dim(all)
all <- filter(all, is.na(all[,4])==FALSE)
dim(all)
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
dim(all)
is.na(all[,4])
is.na(all[,4]==FALSE)
is.na(all[,4])==FALSE
is.na(all[,4])<-0
is.na(all[,4])
all[,4]
all <- data.frame(
NEWID = as.character(all[,1]),
ALCNO = as.numeric(all[,2]),
CLOTHMOA = as.numeric(all[,3]),
CLOTHXA = as.numeric(all[,4]),
Description = as.character(all[,5])
)
all <- filter(all, is.na(all[,4])==FALSE)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
head(all)
all <- select(all, Description, CLOTHXA)
Head(all)
head(all)
fit <- aov(CLOTHXA ~ Description, data = all)
fit
lm(CLOTHXA ~ Description, data = all)
model <- lm(CLOTHXA ~ Description, data = all)
summary(model)
anova(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = model$Description)
ggplot(model, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplto2)
library(ggplot2)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = model$Description)
ggplot(model, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
confint(model)
fitted(model)
resid(model)
model$Description
all$Description
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
all <- data.frame(
NEWID = as.character(all[,1]),
ALCNO = as.numeric(all[,2]),
CLOTHMOA = as.numeric(all[,3]),
CLOTHXA = as.numeric(all[,4]),
Description = as.character(all[,5])
)
all <- filter(all, is.na(all[,4])==FALSE)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
all <- select(all, Description, CLOTHXA)
all
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
model <- lm(CLOTHXA ~ Description, data = all)
summary(model)
anova(model)
ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
model <- lm(CLOTHXA ~ Description, data = all)
summary(model)
anova(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description)
dim(all)
dim(is.na(all[,2]))
is.na(all[,2])
head(all)
is.na(all[,1])
dim(all)
filter(all, is.na(all[,4])==FALSE)
filter(all, is.na(all[,2])==FALSE)
filter(all, is.na(all[,2])==TRUE)
is.na(all) <- "delete"
View(all)
View(all)
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
#filter incomplete cases
all <- data.frame(
NEWID = as.character(all[,1]),
ALCNO = as.numeric(all[,2]),
CLOTHMOA = as.numeric(all[,3]),
CLOTHXA = as.numeric(all[,4]),
Description = as.character(all[,5])
)
all <- filter(all, is.na(all[,4])==FALSE)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
all <- select(all, Description, CLOTHXA)
is.na(all[,1]) <- "delete"
all
all[all=='NA'] <- NA
all
all[all=='<NA>'] <- NA
all
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL")
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("BuyingIncClass.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df2 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL")
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
df3
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
head(df1)
head(df2)
head(df3)
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL")
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
head(df1)
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
head(df1)
char_data <- read.csv("BuyingIncClass.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df2 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL")
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
head(df2)
head(df3)
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("BuyingIncClass.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df2 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
head(df2)
head(df)
head(Df1)
head(df1)
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL")
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
head(df3)
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("BuyingIncClass.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df2 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
#modify Df2 and Df3 to have same headers
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
head(all)
all <- data.frame(
NEWID = as.character(all[,1]),
ALCNO = as.numeric(all[,2]),
CLOTHMOA = as.numeric(all[,3]),
CLOTHXA = as.numeric(all[,4]),
Description = as.character(all[,5])
)
filter(all, is.na(all[,4])==FALSE)
head(all)
filter(all, is.na(all[,5])==FALSE)
all <- filter(all, is.na(all[,5])==FALSE)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
head(all)
is.na(all[,5])
is.na(all[,4])
is.na(all[,4]) <- 0
is.na(all[,4])
filter(all, is.na(all[,2])==TRUE)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
model <- lm(CLOTHXA ~ Description, data = all)
summary(model)
anova(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description)
ggplot(model, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
fitted(model)
resid(model)
all$Description
cbind(fitted(model), resid(model), all$Description)
class.mod = cbind(fitted(model), resid(model), all$Description)
dim(class.mod)
ggplot(model, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
colnames(class.mod) <- c("Fitted", "Residuals", "Treatment")
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
class.mod1 = cbind(fitted(model), resid(model), all$Description)
class.mod <- data.frame(class.mod1)
dim(class.mod)
colnames(class.mod) <- c("Fitted", "Residuals", "Treatment")
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
head(class.mod)
head(class.mod1)
all$Description
head(all)
char_data <- read.csv("Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df1 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("BuyingIncClass.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df2 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
char_data <- read.csv("classes.csv", stringsAsFactors = F, na.strings=c("NA", "NULL"))
num_data <- data.frame(data.matrix(char_data))
numeric_columns <- sapply(num_data,function(x){mean(as.numeric(is.na(x)))<0.5})
df3 <- data.frame(num_data[,numeric_columns], char_data[,!numeric_columns])
colnames(df3) <- c("INCLASS", "Description")
df23 <- select(left_join(df2, df3, by = "INCLASS"), NEWID, Description)
all <- select(left_join(df1, df23, by = "NEWID"), NEWID, ALCNO, CLOTHMOA, CLOTHXA, Description)
filter(all, is.na(all[,5])==FALSE)
filter(all, is.na(all[,4])==FALSE)
filter(all, is.na(all[,4])==FALSE||is.na(all[,5])==FALSE)
filter(all, is.na(all[,4])==FALSE)
all <- filter(all, is.na(all[,5])==FALSE)
dim(all)
all <- filter(all, is.na(all[,4])==FALSE)
dim(all)
all %>% group_by(Description) %>% summarise(avg = mean(CLOTHXA))
all <- select(all, Description, CLOTHXA)
dim(all)
ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
model <- lm(CLOTHXA ~ Description, data = all)
summary(model)
anova(model)
cbind(fitted(model), resid(model), all$Description)
head(all)
all[,1]
cbind(fitted(model), resid(model), all[,1])
head(cbind(fitted(model), resid(model), all[,1]))
head(all[,1])
head(data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description))
class.mod = head(data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description))
head(class.mod)
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description)
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
par(mfrow=c(2,1))
ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
par(mfrow=c(1,2))
ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
install.packages("gridExtra")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
p1 = ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1,p2,ncol=2,main="Comparing Raw vs. Residuals")
library("gridExtra")
p1 = ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1,p2,ncol=2,main="Comparing Raw vs. Residuals")
library(ggplot2)
library(gridExtra)
library(grid)
p1 = ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1,p2,ncol=2,main="Comparing Raw vs. Residuals")
p1
p2
grid.arrange(p1,p2)
grid.arrange(p1,p2, ncol=2)
p1 = ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1, p2, ncol=2)
library(RCurl)
library(tidyr)
library(dplyr)
library(ggplot2)
# Load data into data frame
bloom <- readRDS(gzcon(url("https://raw.githubusercontent.com/parastyle/DATA-607---Final-Project-/master/Data/bloomingdales.rds")))
bloom$price.original <- as.double(bloom$price.original)
# Histogram
ggplot(bloom, aes(price.original)) +
geom_histogram() +
xlab("Price") + ylab("")
# Popular colors (top 15)
u <- bloom %>%
select(color) %>%
unnest(color) %>%
count(color) %>%
arrange(n) %>%
top_n(15)
u$color <- factor(u$color, levels = unique(u$color))
ggplot(u, aes(u$color, u$n)) +
geom_bar(stat = "identity") +
coord_flip() +
xlab("Color") + ylab("No of Items")
u <- bloom %>%
select(color) %>%
unnest(color) %>%
count(color) %>%
arrange(n) %>%
top_n(15)
library(RCurl)
library(tidyr)
library(dplyr)
library(ggplot2)
install.packages("RCurl")
install.packages("tidyr")
library(RCurl)
library(tidyr)
library(dplyr)
library(ggplot2)
bloom <- readRDS(gzcon(url("https://raw.githubusercontent.com/parastyle/DATA-607---Final-Project-/master/Data/bloomingdales.rds")))
bloom$price.original <- as.double(bloom$price.original)
# Popular colors (top 15)
u <- bloom %>%
select(color) %>%
# Histogram
ggplot(bloom, aes(price.original)) +
geom_histogram() +
xlab("Price") + ylab("")
ggplot(bloom, aes(price.original)) +
geom_histogram() +
xlab("Price") + ylab("")
u <- bloom %>%
select(color) %>%
unnest(color) %>%
count(color) %>%
arrange(n) %>%
top_n(15)
u$color <- factor(u$color, levels = unique(u$color))
ggplot(u, aes(u$color, u$n)) +
geom_bar(stat = "identity") +
coord_flip() +
xlab("Color") + ylab("No of Items")
collapse_color = function(x){
if (x!="white" && x!="black" && x!="pattern")
return("solid color")
else
return(x)
}
bloom %>%
select(color, price.original) %>%
unnest(color) %>%
transmute(price = price.original, color = lapply(color, collapse_color)) %>%
ggplot(aes(x = as.factor(unlist(color)), y = price)) +
geom_boxplot() + geom_point() +
xlab("Color") + ylab("Price")
bloom %>%
select(material, price.original) %>%
unnest(material) %>%
filter(!is.na(material)) %>%
ggplot(aes(x = as.factor(unlist(material)), y = price.original)) +
geom_boxplot() + geom_point() +
xlab("Material") + ylab("Price")
bloom %>%
select(type, price.original) %>%
ggplot(aes(x = as.factor(unlist(type)), y = price.original)) +
geom_boxplot() + geom_point() +
xlab("Type") + ylab("Price")
bloom %>%
select(material, type) %>%
unnest(material) %>%
filter(!is.na(material)) %>%
count(material, type) %>%
ggplot(aes(x = as.factor(material), y = as.factor(type), fill = n)) +
geom_tile() +
coord_flip() +
xlab("Material") + ylab("Type") +
scale_fill_continuous(guide = guide_legend(title = "No of Items"))
# Number of colors by price
bloom %>%
select(color, price.original) %>%
transmute(price = price.original, color.count = lapply(color, length)) %>%
ggplot(aes(x = as.factor(unlist(color.count)), y = price)) +
geom_boxplot() + geom_point() +
xlab("No of Colors Offered") + ylab("Price")
head(bloom)
bloomsub <- select(bloom, type, price.original)
model <- lm(price.original ~ type, data = bloomsub)
summary(model)
anova(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = bloomsub$Type)
fitted(model)
bloomsub$type
resid(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = bloomsub$Type)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = all$Description)
head(class.mod)
p1 = ggplot(all, aes(x = Description, y = CLOTHXA)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Income Class") +
ylab("Spend")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1, p2, ncol=2)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = bloomsub$Type)
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
p2
model <- lm(price.original ~ type, data = bloomsub)
summary(model)
anova(model)
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = bloomsub$Type)
p1 = ggplot(bloomsub, aes(x = Description, y = price.original)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Type") +
ylab("Price")
p1
p1 = ggplot(bloomsub, aes(x = Type, y = price.original)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Type") +
ylab("Price")
p1
ggplot(bloomsub, aes(x = type, y = price.original)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Type") +
ylab("Price")
p1 = ggplot(bloomsub, aes(x = type, y = price.original)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Type") +
ylab("Price")
class.mod = data.frame(Fitted = fitted(model),
Residuals = resid(model), Treatment = bloomsub$type)
p1 = ggplot(bloomsub, aes(x = type, y = price.original)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Type") +
ylab("Price")
p2 = ggplot(class.mod, aes(Fitted, Residuals, colour = Treatment)) + geom_point()
grid.arrange(p1, p2, ncol=2)
char_data <- read.csv("https://raw.githubusercontent.com/parastyle/DATA-607---Final-Project-/master/Data/Consumer Survey (BLS)/Buying200.csv", stringsAsFactors = F,na.strings=c("NA", "NULL"))
<style>
.reveal h1, .reveal h2, .reveal h3 {
word-wrap: normal;
-moz-hyphens: none;
}
</style>
.footer {
color: black; background: #E8E8E8;
position: fixed; top: 90%;
text-align:center; width:100%;
}
